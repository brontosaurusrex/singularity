#!/bin/bash
# set -x
# script name into "$me"
me=$(basename $BASH_SOURCE)

# functions
encode()  { # put your encoding settings here

    when=$(date +%Y%m%d%H%M%S)
    FFREPORT=file="$log/$baseext.$when.$RANDOM.$me.log":level=40 \
    \
    ffmpeg -hide_banner -i "$file" -to 5 -pix_fmt yuv420p -c:v libvpx-vp9 -crf 33 -threads 8 -speed 4 -tile-columns 6 -frame-parallel 1 -b:v 0 -an "$tmpdir/$base.video.webm" </dev/null 
    # </dev/null is some sort of null input, so that script will work when in bg as well
    
    # -crf 33 -threads 8 -speed 4 -tile-columns 6 -frame-parallel 1
    # -tile-columns 6 -frame-parallel 5 -threads 4 
    # -aspect 16:9 -vf yadif=0 
    # -loglevel panic -stats
}

# help
    if [ $# -eq 0 ]; then echo "anything to VP9 crf mode (very slowly) with some vorbis audio"; exit 1; fi

# source config file which includes tmpdir generator and timer
config="$HOME/bin/singularity.cfg"
test -f "$config" && source "$config" >/dev/null || { echo "$config does not exist" ; exit 1; }
# and timer
source "$HOME/bin/timer_func" # not a big deal if this fails

# main loop
while [ $# -gt 0 ]; do

    file=$(readlink -f "$1")
    baseext=$(basename "${1}")      # file.ext
    base="${baseext%.*}"            # file
        # skip file entirely if there is no video
        hasVideo "$file" || { >&2 echo "No Video in $file" ; shift; continue; }
        # encode audio in background (remove >/dev/null 2>&1 when debuging)
        hasAudio "$file" && toVORBIS scriptcall "$tmpdir" "$1" >/dev/null 2>&1 
        # encode video
        echo "$me encoding $file"
        encode "$file"
        
        wait
        
    # unique output filename
    baseout="$base" 
    while [ -f "$out/$baseout.webm" ] ; do
        baseout="$base.$RANDOM"
    done

    # if there is audio, then mux video + audio, else just mv video to final location.
    if hasAudio "$file" ; then
        echo "hasAudio, muxing"
        ffmpeg -y -i "$tmpdir/$base.video.webm" -i "$tmpdir/$base.ogg" -acodec copy -vcodec copy "$out/$baseout.webm" -loglevel panic </dev/null
    else
        echo "noAudio, just moving"
        mv "$tmpdir/$base.video.webm" "$out/$baseout.webm" 
    fi
    
    # echo output location/filename
    test -f "$out/$baseout.webm" && echo "$me output $out/$baseout.webm" || { echo "$me No output file found, error, exiting" ; exit 1; }
    
    echo #empty line
    
shift
done 

echo "$me done in" $(timer $tmr)

flite -voice rms "I did something" >/dev/null 2>&1

stty sane



