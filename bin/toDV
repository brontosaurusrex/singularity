#!/bin/bash
# set -x
# script name into "$me"
me=$(basename $BASH_SOURCE)

# functions
encode()  { # put your encoding settings here

    when=$(date +%Y%m%d%H%M%S)
    FFREPORT=file="$log/$baseext.$when.$RANDOM.$me.log":level=40 \
    \
    ffmpeg -hide_banner -i "$file" -vf scale=720:576 -aspect 1.778 -target pal-dv "$tmpdir/$base.dv" -loglevel panic -stats </dev/null
    # </dev/null is some sort of null input, so that script will work when in bg as well
    
}

# -loglevel panic -stats

# help
    if [ $# -eq 0 ]; then echo "anything to DV"; exit 1; fi

# source config file which includes tmpdir generator and timer
config="$HOME/bin/singularity.cfg"
test -f "$config" && source "$config" >/dev/null || { echo "$config does not exist" ; exit 1; }
# and timer
source "$HOME/bin/timer_func" # not a big deal if this fails

# main loop
while [ $# -gt 0 ]; do

    file=$(readlink -f "$1")
    baseext=$(basename "${1}")     # basename, like                file.flac
    base="${baseext%.*}"           # basename without extension    file

    
        hasVideo "$file" || { >&2 echo "No Video in $file" ; shift; continue; } # "continue" should skip to next file in this while loop.
    
        echo "$me encoding $file"
        encode "$file"
        


    # if there is audio, then mux video + audio, else just mv video to final location.
    mv "$tmpdir/$base.dv" "$out/$base.dv" 

    
    # echo output location/filename
    test -f "$out/$base.dv" && echo "$me output $out/$base.dv" || { echo "$me No output file found, error, exiting" ; exit 1; }
    
    echo #empty line
    
shift
done 

echo "$me done in" $(timer $tmr)

flite -voice rms "I did something" >/dev/null 2>&1

stty sane



