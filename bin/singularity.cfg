# singularity config file for various scripts

out="$HOME/output"
log="$HOME/output/log"

EBUR128="true"

# check the sources variables from config file
if [ -z ${out+x} ]; then echo "singularity out is unset"; exit 1; else echo "singularity out is '$out'"; fi
if [ -w "$out" ] ;  then echo " singularity out writable" ; else echo "singularity out not writable"; exit 1; fi
if [ -z ${log+x} ]; then echo "singularity log is unset"; exit 1; else mkdir "$log" 2>/dev/null; echo "singularity log is '$log'"; fi
if [ -w "$log" ] ;  then echo " singularity log writable" ; else echo "singularity log not writable"; exit 1; fi

# generate random "$tmpdir" dir inside "$out"
if [ -d "$out" ]; then
    # tmp dir http://mywiki.wooledge.org/BashFAQ/062
    tmpdir="/$out/$RANDOM-$$"
    trap '[ -n "$tmpdir" ] && rm -fr "$tmpdir"' EXIT
    mkdir -m 700 "$tmpdir" || { echo '!! unable to create a tmpdir' >&2; tmpdir=; exit 1; }
fi

# checks critical
command -v mediainfo >/dev/null 2>&1 || { >&2 echo "$me I need mediainfo installed." ; exit 1; }
command -v fdkaac >/dev/null 2>&1 || { >&2 echo "$me I need fdkaac installed." ; exit 1; }
command -v ffmpeg >/dev/null 2>&1 || { >&2 echo "$me I need ffmpeg installed." ; exit 1; }
command -v r128corection >/dev/null 2>&1 || { >&2 echo "$me I need r128corection script on path" ; exit 1; }
command -v hasAudio >/dev/null 2>&1 || { >&2 echo "$me I need hasAudio script on path" ; exit 1; }
command -v hasVideo >/dev/null 2>&1 || { >&2 echo "$me I need hasVideo script on path" ; exit 1; }
command -v MXFdownmix >/dev/null 2>&1 || { >&2 echo "$me I need MXFdownmix script on path" ; exit 1; }

# checks noncritical
command -v flite >/dev/null 2>&1 || { >&2 echo "$me I'd like flite installed, so I can talk." ; }
